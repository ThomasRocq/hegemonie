// Code generated by protoc-gen-go. DO NOT EDIT.
// source: admin.proto

package hegemonie_region_proto_admin

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScoredCity struct {
	City                 uint64   `protobuf:"varint,1,opt,name=city,proto3" json:"city,omitempty"`
	Score                int64    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScoredCity) Reset()         { *m = ScoredCity{} }
func (m *ScoredCity) String() string { return proto.CompactTextString(m) }
func (*ScoredCity) ProtoMessage()    {}
func (*ScoredCity) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{0}
}

func (m *ScoredCity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScoredCity.Unmarshal(m, b)
}
func (m *ScoredCity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScoredCity.Marshal(b, m, deterministic)
}
func (m *ScoredCity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScoredCity.Merge(m, src)
}
func (m *ScoredCity) XXX_Size() int {
	return xxx_messageInfo_ScoredCity.Size(m)
}
func (m *ScoredCity) XXX_DiscardUnknown() {
	xxx_messageInfo_ScoredCity.DiscardUnknown(m)
}

var xxx_messageInfo_ScoredCity proto.InternalMessageInfo

func (m *ScoredCity) GetCity() uint64 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *ScoredCity) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ScoreBoard struct {
	Items                []*ScoredCity `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ScoreBoard) Reset()         { *m = ScoreBoard{} }
func (m *ScoreBoard) String() string { return proto.CompactTextString(m) }
func (*ScoreBoard) ProtoMessage()    {}
func (*ScoreBoard) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{1}
}

func (m *ScoreBoard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScoreBoard.Unmarshal(m, b)
}
func (m *ScoreBoard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScoreBoard.Marshal(b, m, deterministic)
}
func (m *ScoreBoard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScoreBoard.Merge(m, src)
}
func (m *ScoreBoard) XXX_Size() int {
	return xxx_messageInfo_ScoreBoard.Size(m)
}
func (m *ScoreBoard) XXX_DiscardUnknown() {
	xxx_messageInfo_ScoreBoard.DiscardUnknown(m)
}

var xxx_messageInfo_ScoreBoard proto.InternalMessageInfo

func (m *ScoreBoard) GetItems() []*ScoredCity {
	if m != nil {
		return m.Items
	}
	return nil
}

type None struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *None) Reset()         { *m = None{} }
func (m *None) String() string { return proto.CompactTextString(m) }
func (*None) ProtoMessage()    {}
func (*None) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{2}
}

func (m *None) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_None.Unmarshal(m, b)
}
func (m *None) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_None.Marshal(b, m, deterministic)
}
func (m *None) XXX_Merge(src proto.Message) {
	xxx_messageInfo_None.Merge(m, src)
}
func (m *None) XXX_Size() int {
	return xxx_messageInfo_None.Size(m)
}
func (m *None) XXX_DiscardUnknown() {
	xxx_messageInfo_None.DiscardUnknown(m)
}

var xxx_messageInfo_None proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ScoredCity)(nil), "hegemonie.region.proto.admin.ScoredCity")
	proto.RegisterType((*ScoreBoard)(nil), "hegemonie.region.proto.admin.ScoreBoard")
	proto.RegisterType((*None)(nil), "hegemonie.region.proto.admin.None")
}

func init() { proto.RegisterFile("admin.proto", fileDescriptor_73a7fc70dcc2027c) }

var fileDescriptor_73a7fc70dcc2027c = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x4c, 0xc9, 0xcd,
	0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0xc9, 0x48, 0x4d, 0x4f, 0xcd, 0xcd, 0xcf,
	0xcb, 0x4c, 0xd5, 0x2b, 0x4a, 0x4d, 0xcf, 0xcc, 0x87, 0x8a, 0xeb, 0x81, 0xd5, 0x28, 0x99, 0x71,
	0x71, 0x05, 0x27, 0xe7, 0x17, 0xa5, 0xa6, 0x38, 0x67, 0x96, 0x54, 0x0a, 0x09, 0x71, 0xb1, 0x24,
	0x67, 0x96, 0x54, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x04, 0x81, 0xd9, 0x42, 0x22, 0x5c, 0xac,
	0xc5, 0x20, 0x15, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x10, 0x8e, 0x92, 0x0f, 0x54, 0x9f,
	0x53, 0x7e, 0x62, 0x51, 0x8a, 0x90, 0x1d, 0x17, 0x6b, 0x66, 0x49, 0x6a, 0x6e, 0xb1, 0x04, 0xa3,
	0x02, 0xb3, 0x06, 0xb7, 0x91, 0x86, 0x1e, 0x3e, 0x3b, 0xf5, 0x10, 0x16, 0x06, 0x41, 0xb4, 0x29,
	0xb1, 0x71, 0xb1, 0xf8, 0xe5, 0xe7, 0xa5, 0x1a, 0x75, 0x33, 0x71, 0xb1, 0x3a, 0x82, 0xd4, 0x08,
	0x05, 0x73, 0xb1, 0x07, 0x14, 0xe5, 0xa7, 0x94, 0x26, 0xa7, 0x0a, 0x29, 0xe1, 0x37, 0x0d, 0xa4,
	0x51, 0x8a, 0x08, 0x35, 0x4a, 0x0c, 0x42, 0x01, 0x5c, 0x2c, 0xbe, 0xf9, 0x65, 0xd4, 0x34, 0x31,
	0x9a, 0x8b, 0xd3, 0x3d, 0xb5, 0x04, 0xec, 0xa1, 0x62, 0xa2, 0x8c, 0x25, 0x26, 0x68, 0xc0, 0x61,
	0xaa, 0xc4, 0x90, 0xc4, 0x06, 0x96, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x97, 0x2c,
	0x71, 0xcf, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	// Have all the Cities on the Region to produce their resources
	Produce(ctx context.Context, in *None, opts ...grpc.CallOption) (*None, error)
	// Make all the armies on the Region to move on step
	Move(ctx context.Context, in *None, opts ...grpc.CallOption) (*None, error)
	GetScores(ctx context.Context, in *None, opts ...grpc.CallOption) (*ScoreBoard, error)
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) Produce(ctx context.Context, in *None, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/hegemonie.region.proto.admin.Admin/Produce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) Move(ctx context.Context, in *None, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/hegemonie.region.proto.admin.Admin/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetScores(ctx context.Context, in *None, opts ...grpc.CallOption) (*ScoreBoard, error) {
	out := new(ScoreBoard)
	err := c.cc.Invoke(ctx, "/hegemonie.region.proto.admin.Admin/GetScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	// Have all the Cities on the Region to produce their resources
	Produce(context.Context, *None) (*None, error)
	// Make all the armies on the Region to move on step
	Move(context.Context, *None) (*None, error)
	GetScores(context.Context, *None) (*ScoreBoard, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) Produce(ctx context.Context, req *None) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Produce not implemented")
}
func (*UnimplementedAdminServer) Move(ctx context.Context, req *None) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Move not implemented")
}
func (*UnimplementedAdminServer) GetScores(ctx context.Context, req *None) (*ScoreBoard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetScores not implemented")
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_Produce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(None)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).Produce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hegemonie.region.proto.admin.Admin/Produce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).Produce(ctx, req.(*None))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(None)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hegemonie.region.proto.admin.Admin/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).Move(ctx, req.(*None))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(None)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hegemonie.region.proto.admin.Admin/GetScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetScores(ctx, req.(*None))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hegemonie.region.proto.admin.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Produce",
			Handler:    _Admin_Produce_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _Admin_Move_Handler,
		},
		{
			MethodName: "GetScores",
			Handler:    _Admin_GetScores_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin.proto",
}
