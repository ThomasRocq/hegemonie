// Code generated by protoc-gen-go. DO NOT EDIT.
// source: army.proto

package hegemonie_region_proto_army

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Identifies an army managed by the city
type ArmyId struct {
	Character            uint64   `protobuf:"varint,1,opt,name=character,proto3" json:"character,omitempty"`
	City                 uint64   `protobuf:"varint,2,opt,name=city,proto3" json:"city,omitempty"`
	Army                 uint64   `protobuf:"varint,3,opt,name=army,proto3" json:"army,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArmyId) Reset()         { *m = ArmyId{} }
func (m *ArmyId) String() string { return proto.CompactTextString(m) }
func (*ArmyId) ProtoMessage()    {}
func (*ArmyId) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5f3732a0e886568, []int{0}
}

func (m *ArmyId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArmyId.Unmarshal(m, b)
}
func (m *ArmyId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArmyId.Marshal(b, m, deterministic)
}
func (m *ArmyId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArmyId.Merge(m, src)
}
func (m *ArmyId) XXX_Size() int {
	return xxx_messageInfo_ArmyId.Size(m)
}
func (m *ArmyId) XXX_DiscardUnknown() {
	xxx_messageInfo_ArmyId.DiscardUnknown(m)
}

var xxx_messageInfo_ArmyId proto.InternalMessageInfo

func (m *ArmyId) GetCharacter() uint64 {
	if m != nil {
		return m.Character
	}
	return 0
}

func (m *ArmyId) GetCity() uint64 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *ArmyId) GetArmy() uint64 {
	if m != nil {
		return m.Army
	}
	return 0
}

type ArmyView struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArmyView) Reset()         { *m = ArmyView{} }
func (m *ArmyView) String() string { return proto.CompactTextString(m) }
func (*ArmyView) ProtoMessage()    {}
func (*ArmyView) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5f3732a0e886568, []int{1}
}

func (m *ArmyView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArmyView.Unmarshal(m, b)
}
func (m *ArmyView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArmyView.Marshal(b, m, deterministic)
}
func (m *ArmyView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArmyView.Merge(m, src)
}
func (m *ArmyView) XXX_Size() int {
	return xxx_messageInfo_ArmyView.Size(m)
}
func (m *ArmyView) XXX_DiscardUnknown() {
	xxx_messageInfo_ArmyView.DiscardUnknown(m)
}

var xxx_messageInfo_ArmyView proto.InternalMessageInfo

func (m *ArmyView) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ArmyView) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ArmyCommandReq struct {
	Character            uint64   `protobuf:"varint,1,opt,name=character,proto3" json:"character,omitempty"`
	City                 uint64   `protobuf:"varint,2,opt,name=city,proto3" json:"city,omitempty"`
	Army                 uint64   `protobuf:"varint,3,opt,name=army,proto3" json:"army,omitempty"`
	Target               uint64   `protobuf:"varint,4,opt,name=target,proto3" json:"target,omitempty"`
	Action               uint64   `protobuf:"varint,5,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArmyCommandReq) Reset()         { *m = ArmyCommandReq{} }
func (m *ArmyCommandReq) String() string { return proto.CompactTextString(m) }
func (*ArmyCommandReq) ProtoMessage()    {}
func (*ArmyCommandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5f3732a0e886568, []int{2}
}

func (m *ArmyCommandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArmyCommandReq.Unmarshal(m, b)
}
func (m *ArmyCommandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArmyCommandReq.Marshal(b, m, deterministic)
}
func (m *ArmyCommandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArmyCommandReq.Merge(m, src)
}
func (m *ArmyCommandReq) XXX_Size() int {
	return xxx_messageInfo_ArmyCommandReq.Size(m)
}
func (m *ArmyCommandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ArmyCommandReq.DiscardUnknown(m)
}

var xxx_messageInfo_ArmyCommandReq proto.InternalMessageInfo

func (m *ArmyCommandReq) GetCharacter() uint64 {
	if m != nil {
		return m.Character
	}
	return 0
}

func (m *ArmyCommandReq) GetCity() uint64 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *ArmyCommandReq) GetArmy() uint64 {
	if m != nil {
		return m.Army
	}
	return 0
}

func (m *ArmyCommandReq) GetTarget() uint64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *ArmyCommandReq) GetAction() uint64 {
	if m != nil {
		return m.Action
	}
	return 0
}

type None struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *None) Reset()         { *m = None{} }
func (m *None) String() string { return proto.CompactTextString(m) }
func (*None) ProtoMessage()    {}
func (*None) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5f3732a0e886568, []int{3}
}

func (m *None) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_None.Unmarshal(m, b)
}
func (m *None) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_None.Marshal(b, m, deterministic)
}
func (m *None) XXX_Merge(src proto.Message) {
	xxx_messageInfo_None.Merge(m, src)
}
func (m *None) XXX_Size() int {
	return xxx_messageInfo_None.Size(m)
}
func (m *None) XXX_DiscardUnknown() {
	xxx_messageInfo_None.DiscardUnknown(m)
}

var xxx_messageInfo_None proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ArmyId)(nil), "hegemonie.region.proto.army.ArmyId")
	proto.RegisterType((*ArmyView)(nil), "hegemonie.region.proto.army.ArmyView")
	proto.RegisterType((*ArmyCommandReq)(nil), "hegemonie.region.proto.army.ArmyCommandReq")
	proto.RegisterType((*None)(nil), "hegemonie.region.proto.army.None")
}

func init() { proto.RegisterFile("army.proto", fileDescriptor_d5f3732a0e886568) }

var fileDescriptor_d5f3732a0e886568 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xb1, 0x4a, 0x34, 0x31,
	0x10, 0xc7, 0xbf, 0xdd, 0x2f, 0xae, 0xde, 0x14, 0x57, 0x4c, 0x21, 0x41, 0x2d, 0x74, 0x45, 0x10,
	0x84, 0x14, 0xfa, 0x04, 0x22, 0x08, 0x36, 0x87, 0xac, 0x62, 0x63, 0x15, 0x77, 0x87, 0xdd, 0x80,
	0x49, 0xce, 0x10, 0x38, 0xf6, 0x05, 0x7c, 0x4b, 0xdf, 0x45, 0x26, 0x59, 0xb9, 0xee, 0xee, 0x8a,
	0xeb, 0x66, 0x7e, 0xf9, 0xe7, 0xc7, 0x30, 0x03, 0xa0, 0x83, 0x1d, 0xd5, 0x32, 0xf8, 0xe8, 0xf1,
	0x74, 0xa0, 0x9e, 0xac, 0x77, 0x86, 0x54, 0xa0, 0xde, 0x78, 0x97, 0xb9, 0xe2, 0x48, 0xbd, 0x80,
	0xea, 0x3e, 0xd8, 0xf1, 0xa9, 0xc3, 0x33, 0x98, 0xb5, 0x83, 0x0e, 0xba, 0x8d, 0x14, 0x64, 0x71,
	0x5e, 0x5c, 0x8b, 0x66, 0x0d, 0x10, 0x41, 0xb4, 0x26, 0x8e, 0xb2, 0x4c, 0x0f, 0xa9, 0x66, 0xc6,
	0x0e, 0xf9, 0x3f, 0xb3, 0xe4, 0x53, 0x70, 0xc4, 0xbe, 0x37, 0x43, 0x2b, 0x9c, 0x43, 0x69, 0xba,
	0x49, 0x55, 0x9a, 0x8e, 0xf3, 0x4e, 0x5b, 0x4a, 0x8e, 0x59, 0x93, 0xea, 0xfa, 0xbb, 0x80, 0x39,
	0x7f, 0x78, 0xf0, 0xd6, 0x6a, 0xd7, 0x35, 0xf4, 0xb5, 0x9f, 0x41, 0xf0, 0x18, 0xaa, 0xa8, 0x43,
	0x4f, 0x51, 0x8a, 0x44, 0xa7, 0x8e, 0xb9, 0x6e, 0xa3, 0xf1, 0x4e, 0x1e, 0x64, 0x9e, 0xbb, 0xba,
	0x02, 0xb1, 0xf0, 0x8e, 0x6e, 0x7f, 0x4a, 0x10, 0x3c, 0x10, 0xbe, 0x82, 0x78, 0x19, 0xfc, 0x0a,
	0x2f, 0xd5, 0x86, 0xfd, 0xa9, 0xbc, 0xbc, 0x93, 0xab, 0xad, 0x21, 0xde, 0x48, 0xfd, 0x0f, 0x9f,
	0x41, 0x3c, 0x7e, 0x92, 0xde, 0xcd, 0x7a, 0xb1, 0x31, 0xc4, 0xe3, 0xfe, 0x19, 0xcd, 0x72, 0x8f,
	0xc6, 0x77, 0x38, 0x9c, 0xce, 0x81, 0x37, 0x5b, 0xa5, 0xeb, 0xc3, 0xed, 0x24, 0xff, 0xa8, 0x12,
	0xba, 0xfb, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x23, 0xb0, 0x5e, 0xa2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArmyClient is the client API for Army service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArmyClient interface {
	// Return a detailed view of the given Army
	Show(ctx context.Context, in *ArmyId, opts ...grpc.CallOption) (*ArmyView, error)
	// Make the Army flea the fight it is involved in.
	Flea(ctx context.Context, in *ArmyId, opts ...grpc.CallOption) (*None, error)
	// Make the Army flip in the fight it is involved in.
	Flip(ctx context.Context, in *ArmyId, opts ...grpc.CallOption) (*None, error)
	// Append the specified command on the list of the Army.
	Command(ctx context.Context, in *ArmyCommandReq, opts ...grpc.CallOption) (*None, error)
}

type armyClient struct {
	cc *grpc.ClientConn
}

func NewArmyClient(cc *grpc.ClientConn) ArmyClient {
	return &armyClient{cc}
}

func (c *armyClient) Show(ctx context.Context, in *ArmyId, opts ...grpc.CallOption) (*ArmyView, error) {
	out := new(ArmyView)
	err := c.cc.Invoke(ctx, "/hegemonie.region.proto.army.Army/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *armyClient) Flea(ctx context.Context, in *ArmyId, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/hegemonie.region.proto.army.Army/Flea", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *armyClient) Flip(ctx context.Context, in *ArmyId, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/hegemonie.region.proto.army.Army/Flip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *armyClient) Command(ctx context.Context, in *ArmyCommandReq, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/hegemonie.region.proto.army.Army/Command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArmyServer is the server API for Army service.
type ArmyServer interface {
	// Return a detailed view of the given Army
	Show(context.Context, *ArmyId) (*ArmyView, error)
	// Make the Army flea the fight it is involved in.
	Flea(context.Context, *ArmyId) (*None, error)
	// Make the Army flip in the fight it is involved in.
	Flip(context.Context, *ArmyId) (*None, error)
	// Append the specified command on the list of the Army.
	Command(context.Context, *ArmyCommandReq) (*None, error)
}

// UnimplementedArmyServer can be embedded to have forward compatible implementations.
type UnimplementedArmyServer struct {
}

func (*UnimplementedArmyServer) Show(ctx context.Context, req *ArmyId) (*ArmyView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Show not implemented")
}
func (*UnimplementedArmyServer) Flea(ctx context.Context, req *ArmyId) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Flea not implemented")
}
func (*UnimplementedArmyServer) Flip(ctx context.Context, req *ArmyId) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Flip not implemented")
}
func (*UnimplementedArmyServer) Command(ctx context.Context, req *ArmyCommandReq) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Command not implemented")
}

func RegisterArmyServer(s *grpc.Server, srv ArmyServer) {
	s.RegisterService(&_Army_serviceDesc, srv)
}

func _Army_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArmyId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArmyServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hegemonie.region.proto.army.Army/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArmyServer).Show(ctx, req.(*ArmyId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Army_Flea_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArmyId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArmyServer).Flea(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hegemonie.region.proto.army.Army/Flea",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArmyServer).Flea(ctx, req.(*ArmyId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Army_Flip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArmyId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArmyServer).Flip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hegemonie.region.proto.army.Army/Flip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArmyServer).Flip(ctx, req.(*ArmyId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Army_Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArmyCommandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArmyServer).Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hegemonie.region.proto.army.Army/Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArmyServer).Command(ctx, req.(*ArmyCommandReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Army_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hegemonie.region.proto.army.Army",
	HandlerType: (*ArmyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Show",
			Handler:    _Army_Show_Handler,
		},
		{
			MethodName: "Flea",
			Handler:    _Army_Flea_Handler,
		},
		{
			MethodName: "Flip",
			Handler:    _Army_Flip_Handler,
		},
		{
			MethodName: "Command",
			Handler:    _Army_Command_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "army.proto",
}
